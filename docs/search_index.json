[["time-series-basics-basic-model.html", "Chapter 4 Time Series Basics-Basic Model 4.1 White Noise 4.2 Moving Average 4.3 Autoregression", " Chapter 4 Time Series Basics-Basic Model Definition 4.1 Stochastic process Stochastic process is a collection of random variables \\(\\{X_t\\}\\) indexed by t. Time Series is a collection of random vatiables indexed according to the order they are obtained in time. A realization of the stochastic process is the observed values. 4.1 White Noise Example 4.1 White Noise \\(W_t\\sim \\mathrm{i.i.d.} (0,\\sigma^2) , \\forall t=1,...,n\\) usually, we assume normal distribution, i.e., \\(W_t\\sim \\mathrm{i.i.d.} N(0,\\sigma^2) , \\forall t=1,...,n\\) set.seed(8128) w &lt;- rnorm(n = 100, mean = 0, sd = 1) head(w) #&gt; [1] -0.10528941 0.25548490 0.82065388 0.04070997 #&gt; [5] -0.66722880 -1.54502793 dev.new(width = 6, height = 6, pointsize = 10) # we did not specify y-axis here # note that we use expression() to type math expression plot(x = w, ylab = expression(w[t]), xlab = &quot;t&quot;, type = &quot;o&quot;, col = &quot;red&quot;, main = expression(paste(&quot;White noise where &quot;, w[t], &quot; ~ ind. N(0, 1)&quot;)), panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) #&gt; Warning in title(...): font metrics unknown for character #&gt; 0xa #&gt; Warning in title(...): font metrics unknown for character #&gt; 0xa #Advantage of second plot is separate control over color of points plot(x = w, ylab = expression(w[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;red&quot;, main = expression(paste(&quot;White noise where &quot;, w[t], &quot; ~ ind. N(0, 1)&quot;)), panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = w, pch = 20, col = &quot;blue&quot;) Suppose another white noise process is simulated. Below is a plot overlaying the two time series. set.seed(1298) w.new &lt;- rnorm(n = 100, mean = 0, sd = 1) head(w.new) #&gt; [1] 1.08820292 -1.46217413 -1.10887422 0.55156914 #&gt; [5] 0.70582813 0.05079594 plot(x = w, ylab = expression(w[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;red&quot;, main = expression(paste(&quot;White noise where &quot;, w[t], &quot; ~ ind. N(0, 1)&quot;)), panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = w, pch = 20, col = &quot;blue&quot;) lines(x = w.new, col = &quot;green&quot;) points(x = w.new, pch = 20,col = &quot;orange&quot;) legend(x =&quot;top&quot;,legend=c(&quot;Time series 1&quot;, &quot;Time series 2&quot;), lty=c(1,1), col=c(&quot;red&quot;, &quot;green&quot;), bty=&quot;n&quot;) We could also plot the two time series separately. #make frame by row 2 rows 1 cols par(mfrow = c(2,1)) plot(x = w, ylab = expression(w[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;red&quot;, main = expression(paste(&quot;White noise where &quot;, w[t], &quot;~N(0, 1)&quot;)), panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = w, pch = 20, col = &quot;blue&quot;) plot(x = w.new, ylab = expression(w.new[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;green&quot;, main = expression(paste(&quot;White noise where &quot;, w[t], &quot; ~ ind.N(0, 1)&quot;)), panel.first=grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = w.new, pch = 20, col = &quot;orange&quot;) 4.2 Moving Average Example 4.2 Moving Average of White Noise The previous time series had no correlation between the observations. One way to induce correlation is to create a “moving average” of the observations. This will have an effect of “smoothing” the series. Let \\(m_t = \\frac{w_t+w_{t-1}+w_{t-2}}{3}\\). This can be done in R using the following code: set.seed(8128) w &lt;- rnorm(n=100,mean=0, sd=1) head(w) #&gt; [1] -0.10528941 0.25548490 0.82065388 0.04070997 #&gt; [5] -0.66722880 -1.54502793 # rep(1/3,3) repeats 1/3 3 times m &lt;- filter(x=w, filter = rep(1/3, 3), method=&quot;convolution&quot;, sides=1) head(m) #&gt; [1] NA NA 0.32361646 0.37228292 #&gt; [5] 0.06471168 -0.72384892 tail(m) #&gt; [1] 0.3158762 -0.1803096 0.2598066 -0.6450531 -0.5879723 #&gt; [6] -0.9120182 (w[1]+w[2]+w[3])/3 #&gt; [1] 0.3236165 (w[98]+w[99]+w[100])/3 #&gt; [1] -0.9120182 plot(x = w, ylab = expression(paste(m[t], &quot; or &quot;, w[t])), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;red&quot;, panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;), lty = &quot;dotted&quot;) points(x = w, pch = 20, col = &quot;blue&quot;) lines(x = m, col = &quot;brown&quot;, lty = &quot;solid&quot;, lwd = 4) points(x = m, pch = 20, col = &quot;orange&quot;) legend(x = &quot;top&quot;, legend = c(&quot;MA, 3 points&quot;, &quot;White noise&quot;), lty = c(&quot;solid&quot;, &quot;dotted&quot;), col=c(&quot;brown&quot;, &quot;red&quot;), lwd = c(4,1), bty = &quot;n&quot;) The plot below shows a 7-point moving average. m7 &lt;- filter(x=w, filter=rep(x=1/7, times=7),method=&quot;convolution&quot;, sides=1) plot(x=w, ylab=expression(paste(m[t],&quot;or&quot;,w[t])), xlab=&quot;t&quot;,type=&quot;l&quot;,col=&quot;red&quot;,panel_filter=grid(col=&quot;gray&quot;,lty=&quot;dotted&quot;), lty=&quot;dotted&quot;) points(x=w, pch=20, col=&quot;blue&quot;) lines(x=m, col=&quot;brown&quot;, lty=&quot;solid&quot;,lwd=4) points(x=m, pch=20, col=&quot;orange&quot;) lines(x = m7, col = &quot;lightgreen&quot;, lty = &quot;solid&quot;, lwd = 4) points(x = m7, pch = 20, col = &quot;darkgreen&quot;) legend(x = &quot;top&quot;, legend = c(&quot;MA, 3 points&quot;, &quot;White noise&quot;, &quot;MA 7 points&quot;), lty = c(&quot;solid&quot;, &quot;dotted&quot;, &quot;solid&quot;), col = c(&quot;brown&quot;, &quot;red&quot;, &quot;lightgreen&quot;), lwd = c(2,1,4), bty=&quot;n&quot;) 4.3 Autoregression Example 4.3 Autoregression An autoregression model uses past observations to predict future observations in a regression model. Suppose the autoregression model is \\(x_t = 0.7x_{t-1} + w_t, w_t \\sim \\mathrm{i.i.d.} N(0,1) ,\\forall t = 1, …, n\\) Because there is one past period on the right hand side, this is often denoted as an AR(1) model Obviously, there will be a correlation between the random variables. set.seed(6381) #Different seed from white_noise.R w &lt;- rnorm(n = 200, mean = 0, sd = 1) head(w) #&gt; [1] 0.06737166 -0.68095839 0.78930605 0.60049855 #&gt; [5] -1.21297680 -1.14082872 #Simple way to simulate AR(1) data x &lt;- numeric(length = 200) x.1 &lt;- 0 for(i in 1:length(x)) { x[i] &lt;- 0.7*x.1 + w[i] x.1 &lt;- x[i] } head(data.frame(x, w)) #&gt; x w #&gt; 1 0.06737166 0.06737166 #&gt; 2 -0.63379823 -0.68095839 #&gt; 3 0.34564730 0.78930605 #&gt; 4 0.84245166 0.60049855 #&gt; 5 -0.62326064 -1.21297680 #&gt; 6 -1.57711117 -1.14082872 #Do not use first 100 x &lt;- x[101:200] plot(x = x, ylab = expression(x[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = c(&quot;red&quot;), lwd = 1 , main = expression(paste(&quot;AR(1): &quot;, x[t] == 0.7*x[t-1] + w[t])), panel.first = grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = x, pch = 20, col = &quot;blue&quot;) Here is an easier way to simulate observations from an AR(1). Note that this uses an Autoregressive Integrated Moving Average (ARIMA) structure that we will discuss later in the course. In this case, I use \\(\\sigma_w\\)= 10. set.seed(7181) x &lt;- arima.sim(model = list(ar = c(0.7)), n = 100, rand.gen = rnorm, sd = 10) plot(x = x, ylab = expression(x[t]), xlab = &quot;t&quot;, type = &quot;l&quot;, col = &quot;red&quot;, lwd = 1 ,main = expression(paste(&quot;AR(1): &quot;, x[t] == 0.7*x[t-1] + w[t])), panel.first=grid(col = &quot;gray&quot;, lty = &quot;dotted&quot;)) points(x = x, pch = 20, col = &quot;blue&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
